
package my.rpsfinal;
/**
 * @author aday
 */
import java.util.Random;
import java.io.*;
import sun.audio.*;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

public class RPSFinalUI extends javax.swing.JFrame {

    /**
     * Creates new form RPSFinalUI
     */
    public RPSFinalUI() {  //exception handling
        initComponents();
        try{
            happyAudioStream = new AudioStream(new FileInputStream("C:\\Users\\aday\\Documents\\CIT 249 Java II\\Module10 (FinalProject)\\RPSFinal\\src\\happy.wav"));
            sadAudioStream = new AudioStream(new FileInputStream("C:\\Users\\aday\\Documents\\CIT 249 Java II\\Module10 (FinalProject)\\RPSFinal\\src\\sad.wav"));
        }
        catch(FileNotFoundException e)
        {
            System.out.println("Audio files are not found!");
        }
        catch(IOException ioe)
        {
            System.out.println("AudioStreams are not created!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        Start = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        timesPlayed = new javax.swing.JTextField();
        TimesCounter = new javax.swing.JLabel();
        Rock = new javax.swing.JButton();
        Paper = new javax.swing.JButton();
        Scissors = new javax.swing.JButton();
        GameMode = new javax.swing.JComboBox<>();
        YourHandLabel = new javax.swing.JLabel();
        OpponentHandLabel = new javax.swing.JLabel();
        DisplayYourHand = new javax.swing.JTextField();
        DisplayOpponentHand = new javax.swing.JTextField();
        Choose = new javax.swing.JLabel();
        You = new javax.swing.JLabel();
        Opponent = new javax.swing.JLabel();
        B1Game = new javax.swing.JButton();
        B5Games = new javax.swing.JButton();
        BInfinite = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Start.setText("Start Play");

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\aday\\Documents\\CIT 249 Java II\\Module10 (FinalProject)\\RPSFinal\\media\\neutral.png")); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel3MouseExited(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\aday\\Documents\\CIT 249 Java II\\Module10 (FinalProject)\\RPSFinal\\media\\neutral.png")); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel1MouseExited(evt);
            }
        });

        TimesCounter.setText("Times Played:");

        Rock.setText("Rock");

        Paper.setText("Paper");

        Scissors.setText("Scissors");

        GameMode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1Game", "5Games", "InfiniteGames" }));
        GameMode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                GameModeItemStateChanged(evt);
            }
        });

        YourHandLabel.setText("Your Hand ->");

        OpponentHandLabel.setText("<- Opponents Hand");

        DisplayYourHand.setText("jTextField1");
        DisplayYourHand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayYourHandActionPerformed(evt);
            }
        });

        DisplayOpponentHand.setText("jTextField2");

        Choose.setText("-Choose-");

        You.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        You.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        You.setText("You");

        Opponent.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Opponent.setText("Opponent");

        B1Game.setText("1Game");

        B5Games.setText("5Games");

        BInfinite.setText("InfiniteGames");
        BInfinite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BInfiniteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Scissors)
                            .addComponent(Paper, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(timesPlayed, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(Rock, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(YourHandLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DisplayYourHand, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DisplayOpponentHand, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(OpponentHandLabel)))
                        .addGap(73, 73, 73))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(B1Game)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(B5Games))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BInfinite)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(GameMode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Start, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(21, 21, 21)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(TimesCounter)))
                        .addGap(47, 47, 47))))
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(Choose)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(You, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Opponent)
                .addGap(97, 97, 97))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(GameMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TimesCounter)
                    .addComponent(timesPlayed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91)
                .addComponent(Choose)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rock)
                    .addComponent(YourHandLabel)
                    .addComponent(OpponentHandLabel)
                    .addComponent(DisplayYourHand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DisplayOpponentHand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Paper)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Scissors)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(You)
                            .addComponent(Opponent))
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(B1Game)
                            .addComponent(B5Games))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BInfinite)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Start)
                        .addGap(115, 115, 115))))
        );

        pack();
    }// </editor-fold>                        
    
    
    private void GameModeItemStateChanged(java.awt.event.ItemEvent evt) {                                          
        Object source = evt.getSource();
        //if(source == GameMode && evt.getStateChange() == 1)
          //  = GameMode.getSelectedIndex(); 
    }                                         
    
    private String whoIsWinner(String yourHand, String opponentHand) {
        String theWinner = "";
        if(yourHand.equals(opponentHand))
            theWinner = "TIE";
        else if(yourHand == "Rock")
            if(opponentHand == "Paper")
                theWinner = "Opponent";
            else if(opponentHand == "Scissors")
                theWinner = "You";
        else if(yourHand == "Paper")
            if(opponentHand == "Rock")
                theWinner = "You";
            else if(opponentHand == "Scissors")
                theWinner = "Opponent";
        else if(yourHand == "Scissors")
            if(opponentHand == "Rock")
                theWinner = "Opponent";
            else if(opponentHand == "Paper")
                theWinner = "You";
        
        return theWinner;
    }
    
    
    Rock.addActionListener(this); //awaits Rock button being pressed
    Paper.addActionListener(this); //awaits Paper button being pressed
    Scissors.addActionListener(this); //awaits Scissors button being pressed
    
    public void actionPerformed(ActionEvent evt) {  //After the above action listeners have been activated, then displays what you chose in the textbox
        Object source = evt.getSource();
        if(source == Paper) {
            yourHand = "Paper";
            DisplayYourHand.setText("Paper");
        } else if(source == Rock) {
            yourHand = 'Rock';
            DisplayYourHand.setText("Rock");
        } else if(source == Scissors) {
            yourHand = 'Scissors';
            DisplayYourHand.setText("Scissors");
        }
    }
    
    
    
    private static String playOneGame() {
        int generatedHand = ((int)(Math.random()*10)%3);
        if(generatedHand == '1') {
            opponentHand = 'Rock';
        } else if(generatedHand == '2') {
            opponentHand = 'Paper';
        } else if(generatedHand == '3') {
            opponentHand = 'Scissors';
        }
        String yourHand = "";
        String theWinner = "";
        theWinner = whoIsWinner(yourHand, opponentHand);
        return theWinner;
    }
   
    private static String playFiveGames() {
        int generatedHand = ((int)(Math.random()*10)%3);
        if(generatedHand == '1') {
            opponentHand = 'Rock';
        } else if(generatedHand == '2') {
            opponentHand = 'Paper';
        } else if(generatedHand == '3') {
            opponentHand = 'Scissors';
        }
        //int opponentHand2 = ((int)(Math.random()*10)%3);
        //int opponentHand3 = ((int)(Math.random()*10)%3);
        //int opponentHand4 = ((int)(Math.random()*10)%3);
        //int opponentHand5 = ((int)(Math.random()*10)%3);
        String yourHand = "";
        String theWinner = "";
        int timesYouWon = 0;
        int timesOpponentWon = 0;
        for(int i=0; i<5; i++) {
            theWinner = whoIsWinner(yourHand, opponentHand);
            if(theWinner.equals("YOU"))
                timesYouWon++;
            else if(theWinner.equals("OPPONENT"))
                timesOpponentWon++;
        generatedHand = 0;  //resets computer hand
        }
        if(timesYouWon == timesOpponentWon)
            theWinner = "TIE";
        else if(timesYouWon < timesOpponentWon)
            theWinner = "OPPONENT";
        else if(timesYouWon > timesOpponentWon)
            theWinner = "YOU";
        
        return theWinner;
    }
    
    private static String playInfiniteGames() {
    int generatedHand = ((int)(Math.random()*10)%3);
        if(generatedHand == '1') {
            opponentHand = 'Rock';
        } else if(generatedHand == '2') {
            opponentHand = 'Paper';
        } else if(generatedHand == '3') {
            opponentHand = 'Scissors';
        }
        String yourHand = "";
        String theWinner = "";
        theWinner = whoIsWinner(yourHand, opponentHand);
        return theWinner;
    }
    
    private void DisplayYourHandActionPerformed(java.awt.event.ActionEvent evt) {                                                

    }                                               

    private void BInfiniteActionPerformed(java.awt.event.ActionEvent evt) {                                          
        playInfiniteGames();
    }                                         

    private void jLabel3MouseEntered(java.awt.event.MouseEvent evt) {                                     
        // THIS IS FOR THE PLAYERS FACE
        if(theWinner == "You")
            AudioPlayer.player.start(happyAudioStream);
        else
            AudioPlayer.player.start(sadAudioStream);
    }                                    

    private void jLabel3MouseExited(java.awt.event.MouseEvent evt) {                                    
        // THIS IS FOR THE PLAYERS FACE
        AudioPlayer.player.stop(happyAudioStream);
        AudioPlayer.player.stop(sadAudioStream);
    }                                   

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {                                     
        // THIS IS FOR THE OPPONENTS FACE
        if(theWinner == "Opponent")
            AudioPlayer.player.start(sadAudioStream);
        else
            AudioPlayer.player.start(happyAudioStream);
    }                                    

    private void jLabel1MouseExited(java.awt.event.MouseEvent evt) {                                    
        // THIS IS FOR THE OPPONENTS FACE
        AudioPlayer.player.stop(happyAudioStream);
        AudioPlayer.player.stop(sadAudioStream);
    }                                   

    private void B5GamesActionPerformed(java.awt.event.ActionEvent evt) {                                          
        playFiveGames();
    }                                         

    private void B1GameActionPerformed(java.awt.event.ActionEvent evt) {                                          
        playOneGame();
    }                                         

   
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RPSFinalUI().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton B1Game;
    private javax.swing.JButton B5Games;
    private javax.swing.JButton BInfinite;
    private javax.swing.JLabel Choose;
    private javax.swing.JTextField DisplayOpponentHand;
    private javax.swing.JTextField DisplayYourHand;
    private javax.swing.JComboBox<String> GameMode;
    private javax.swing.JLabel Opponent;
    private javax.swing.JLabel OpponentHandLabel;
    private javax.swing.JButton Paper;
    private javax.swing.JButton Rock;
    private javax.swing.JButton Scissors;
    private javax.swing.JButton Start;
    private javax.swing.JLabel TimesCounter;
    private javax.swing.JLabel You;
    private javax.swing.JLabel YourHandLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField timesPlayed;
    // End of variables declaration                   
}
